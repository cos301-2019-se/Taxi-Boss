/*! THIS FILE IS AUTO-GENERATED */
import { ServiceOptions } from '../lib/api';
import * as abusiveexperiencereport_v1 from './abusiveexperiencereport/v1';
import * as acceleratedmobilepageurl_v1 from './acceleratedmobilepageurl/v1';
import * as adexchangebuyer_v1_2 from './adexchangebuyer/v1.2';
import * as adexchangebuyer_v1_3 from './adexchangebuyer/v1.3';
import * as adexchangebuyer_v1_4 from './adexchangebuyer/v1.4';
import * as adexchangebuyer2_v2beta1 from './adexchangebuyer2/v2beta1';
import * as adexchangeseller_v1 from './adexchangeseller/v1';
import * as adexchangeseller_v1_1 from './adexchangeseller/v1.1';
import * as adexchangeseller_v2_0 from './adexchangeseller/v2.0';
import * as adexperiencereport_v1 from './adexperiencereport/v1';
import * as admin_datatransfer_v1 from './admin/datatransfer_v1';
import * as admin_directory_v1 from './admin/directory_v1';
import * as admin_reports_v1 from './admin/reports_v1';
import * as adsense_v1_4 from './adsense/v1.4';
import * as adsensehost_v4_1 from './adsensehost/v4.1';
import * as analytics_v2_4 from './analytics/v2.4';
import * as analytics_v3 from './analytics/v3';
import * as analyticsreporting_v4 from './analyticsreporting/v4';
import * as androiddeviceprovisioning_v1 from './androiddeviceprovisioning/v1';
import * as androidenterprise_v1 from './androidenterprise/v1';
import * as androidmanagement_v1 from './androidmanagement/v1';
import * as androidpublisher_v1 from './androidpublisher/v1';
import * as androidpublisher_v1_1 from './androidpublisher/v1.1';
import * as androidpublisher_v2 from './androidpublisher/v2';
import * as appengine_v1 from './appengine/v1';
import * as appengine_v1alpha from './appengine/v1alpha';
import * as appengine_v1beta from './appengine/v1beta';
import * as appengine_v1beta4 from './appengine/v1beta4';
import * as appengine_v1beta5 from './appengine/v1beta5';
import * as appsactivity_v1 from './appsactivity/v1';
import * as appstate_v1 from './appstate/v1';
import * as bigquery_v2 from './bigquery/v2';
import * as bigquerydatatransfer_v1 from './bigquerydatatransfer/v1';
import * as blogger_v2 from './blogger/v2';
import * as blogger_v3 from './blogger/v3';
import * as books_v1 from './books/v1';
import * as calendar_v3 from './calendar/v3';
import * as chat_v1 from './chat/v1';
import * as civicinfo_v2 from './civicinfo/v2';
import * as classroom_v1 from './classroom/v1';
import * as cloudbilling_v1 from './cloudbilling/v1';
import * as cloudbuild_v1 from './cloudbuild/v1';
import * as clouddebugger_v2 from './clouddebugger/v2';
import * as clouderrorreporting_v1beta1 from './clouderrorreporting/v1beta1';
import * as cloudfunctions_v1 from './cloudfunctions/v1';
import * as cloudfunctions_v1beta2 from './cloudfunctions/v1beta2';
import * as cloudiot_v1 from './cloudiot/v1';
import * as cloudkms_v1 from './cloudkms/v1';
import * as cloudresourcemanager_v1 from './cloudresourcemanager/v1';
import * as cloudresourcemanager_v1beta1 from './cloudresourcemanager/v1beta1';
import * as cloudresourcemanager_v2 from './cloudresourcemanager/v2';
import * as cloudresourcemanager_v2beta1 from './cloudresourcemanager/v2beta1';
import * as cloudshell_v1 from './cloudshell/v1';
import * as cloudshell_v1alpha1 from './cloudshell/v1alpha1';
import * as cloudtasks_v2beta2 from './cloudtasks/v2beta2';
import * as cloudtrace_v1 from './cloudtrace/v1';
import * as cloudtrace_v2 from './cloudtrace/v2';
import * as compute_alpha from './compute/alpha';
import * as compute_beta from './compute/beta';
import * as compute_v1 from './compute/v1';
import * as container_v1 from './container/v1';
import * as container_v1beta1 from './container/v1beta1';
import * as content_v2 from './content/v2';
import * as content_v2sandbox from './content/v2sandbox';
import * as customsearch_v1 from './customsearch/v1';
import * as dataflow_v1b3 from './dataflow/v1b3';
import * as dataproc_v1 from './dataproc/v1';
import * as dataproc_v1beta2 from './dataproc/v1beta2';
import * as datastore_v1 from './datastore/v1';
import * as datastore_v1beta1 from './datastore/v1beta1';
import * as datastore_v1beta3 from './datastore/v1beta3';
import * as deploymentmanager_alpha from './deploymentmanager/alpha';
import * as deploymentmanager_v2 from './deploymentmanager/v2';
import * as deploymentmanager_v2beta from './deploymentmanager/v2beta';
import * as dfareporting_v2_8 from './dfareporting/v2.8';
import * as dfareporting_v3_0 from './dfareporting/v3.0';
import * as dialogflow_v2 from './dialogflow/v2';
import * as dialogflow_v2beta1 from './dialogflow/v2beta1';
import * as digitalassetlinks_v1 from './digitalassetlinks/v1';
import * as discovery_v1 from './discovery/v1';
import * as dlp_v2 from './dlp/v2';
import * as dlp_v2beta1 from './dlp/v2beta1';
import * as dlp_v2beta2 from './dlp/v2beta2';
import * as dns_v1 from './dns/v1';
import * as dns_v1beta2 from './dns/v1beta2';
import * as dns_v2beta1 from './dns/v2beta1';
import * as doubleclickbidmanager_v1 from './doubleclickbidmanager/v1';
import * as doubleclicksearch_v2 from './doubleclicksearch/v2';
import * as drive_v2 from './drive/v2';
import * as drive_v3 from './drive/v3';
import * as firebasedynamiclinks_v1 from './firebasedynamiclinks/v1';
import * as firebaserules_v1 from './firebaserules/v1';
import * as firestore_v1beta1 from './firestore/v1beta1';
import * as fitness_v1 from './fitness/v1';
import * as fusiontables_v1 from './fusiontables/v1';
import * as fusiontables_v2 from './fusiontables/v2';
import * as games_v1 from './games/v1';
import * as gamesConfiguration_v1configuration from './gamesConfiguration/v1configuration';
import * as gamesManagement_v1management from './gamesManagement/v1management';
import * as genomics_v1 from './genomics/v1';
import * as genomics_v1alpha2 from './genomics/v1alpha2';
import * as genomics_v2alpha1 from './genomics/v2alpha1';
import * as gmail_v1 from './gmail/v1';
import * as groupsmigration_v1 from './groupsmigration/v1';
import * as groupssettings_v1 from './groupssettings/v1';
import * as iam_v1 from './iam/v1';
import * as identitytoolkit_v3 from './identitytoolkit/v3';
import * as kgsearch_v1 from './kgsearch/v1';
import * as language_v1 from './language/v1';
import * as language_v1beta1 from './language/v1beta1';
import * as language_v1beta2 from './language/v1beta2';
import * as licensing_v1 from './licensing/v1';
import * as logging_v2 from './logging/v2';
import * as logging_v2beta1 from './logging/v2beta1';
import * as manufacturers_v1 from './manufacturers/v1';
import * as mirror_v1 from './mirror/v1';
import * as ml_v1 from './ml/v1';
import * as monitoring_v3 from './monitoring/v3';
import * as oauth2_v1 from './oauth2/v1';
import * as oauth2_v2 from './oauth2/v2';
import * as oslogin_v1 from './oslogin/v1';
import * as oslogin_v1alpha from './oslogin/v1alpha';
import * as oslogin_v1beta from './oslogin/v1beta';
import * as pagespeedonline_v1 from './pagespeedonline/v1';
import * as pagespeedonline_v2 from './pagespeedonline/v2';
import * as pagespeedonline_v4 from './pagespeedonline/v4';
import * as partners_v2 from './partners/v2';
import * as people_v1 from './people/v1';
import * as playcustomapp_v1 from './playcustomapp/v1';
import * as plus_v1 from './plus/v1';
import * as plusDomains_v1 from './plusDomains/v1';
import * as poly_v1 from './poly/v1';
import * as prediction_v1_2 from './prediction/v1.2';
import * as prediction_v1_3 from './prediction/v1.3';
import * as prediction_v1_4 from './prediction/v1.4';
import * as prediction_v1_5 from './prediction/v1.5';
import * as prediction_v1_6 from './prediction/v1.6';
import * as proximitybeacon_v1beta1 from './proximitybeacon/v1beta1';
import * as pubsub_v1 from './pubsub/v1';
import * as pubsub_v1beta1a from './pubsub/v1beta1a';
import * as pubsub_v1beta2 from './pubsub/v1beta2';
import * as replicapool_v1beta1 from './replicapool/v1beta1';
import * as replicapool_v1beta2 from './replicapool/v1beta2';
import * as replicapoolupdater_v1beta1 from './replicapoolupdater/v1beta1';
import * as reseller_v1 from './reseller/v1';
import * as resourceviews_v1beta1 from './resourceviews/v1beta1';
import * as resourceviews_v1beta2 from './resourceviews/v1beta2';
import * as runtimeconfig_v1 from './runtimeconfig/v1';
import * as runtimeconfig_v1beta1 from './runtimeconfig/v1beta1';
import * as safebrowsing_v4 from './safebrowsing/v4';
import * as script_v1 from './script/v1';
import * as searchconsole_v1 from './searchconsole/v1';
import * as serviceconsumermanagement_v1 from './serviceconsumermanagement/v1';
import * as servicecontrol_v1 from './servicecontrol/v1';
import * as servicemanagement_v1 from './servicemanagement/v1';
import * as serviceusage_v1beta1 from './serviceusage/v1beta1';
import * as serviceuser_v1 from './serviceuser/v1';
import * as sheets_v4 from './sheets/v4';
import * as siteVerification_v1 from './siteVerification/v1';
import * as slides_v1 from './slides/v1';
import * as sourcerepo_v1 from './sourcerepo/v1';
import * as spanner_v1 from './spanner/v1';
import * as spectrum_v1explorer from './spectrum/v1explorer';
import * as speech_v1 from './speech/v1';
import * as speech_v1beta1 from './speech/v1beta1';
import * as sqladmin_v1beta3 from './sqladmin/v1beta3';
import * as sqladmin_v1beta4 from './sqladmin/v1beta4';
import * as storage_v1 from './storage/v1';
import * as storage_v1beta1 from './storage/v1beta1';
import * as storage_v1beta2 from './storage/v1beta2';
import * as storagetransfer_v1 from './storagetransfer/v1';
import * as streetviewpublish_v1 from './streetviewpublish/v1';
import * as surveys_v2 from './surveys/v2';
import * as tagmanager_v1 from './tagmanager/v1';
import * as tagmanager_v2 from './tagmanager/v2';
import * as taskqueue_v1beta1 from './taskqueue/v1beta1';
import * as taskqueue_v1beta2 from './taskqueue/v1beta2';
import * as tasks_v1 from './tasks/v1';
import * as testing_v1 from './testing/v1';
import * as texttospeech_v1beta1 from './texttospeech/v1beta1';
import * as toolresults_v1beta3 from './toolresults/v1beta3';
import * as tpu_v1alpha1 from './tpu/v1alpha1';
import * as translate_v2 from './translate/v2';
import * as urlshortener_v1 from './urlshortener/v1';
import * as vault_v1 from './vault/v1';
import * as videointelligence_v1beta1 from './videointelligence/v1beta1';
import * as vision_v1 from './vision/v1';
import * as vision_v1p1beta1 from './vision/v1p1beta1';
import * as vision_v1p2beta1 from './vision/v1p2beta1';
import * as webfonts_v1 from './webfonts/v1';
import * as webmasters_v3 from './webmasters/v3';
import * as youtube_v3 from './youtube/v3';
import * as youtubeAnalytics_v1 from './youtubeAnalytics/v1';
import * as youtubeAnalytics_v1beta1 from './youtubeAnalytics/v1beta1';
import * as youtubereporting_v1 from './youtubereporting/v1';
export interface APIList {
    [index: string]: {
        [index: string]: any;
    };
}
export declare class GeneratedAPIs {
    private getAPI<T>(api, options);
    abusiveexperiencereport<T = abusiveexperiencereport_v1.Abusiveexperiencereport>(options: ServiceOptions | string): T;
    acceleratedmobilepageurl<T = acceleratedmobilepageurl_v1.Acceleratedmobilepageurl>(options: ServiceOptions | string): T;
    adexchangebuyer<T = adexchangebuyer_v1_2.Adexchangebuyer | adexchangebuyer_v1_3.Adexchangebuyer | adexchangebuyer_v1_4.Adexchangebuyer>(options: ServiceOptions | string): T;
    adexchangebuyer2<T = adexchangebuyer2_v2beta1.Adexchangebuyer2>(options: ServiceOptions | string): T;
    adexchangeseller<T = adexchangeseller_v1_1.Adexchangeseller | adexchangeseller_v1.Adexchangeseller | adexchangeseller_v2_0.Adexchangeseller>(options: ServiceOptions | string): T;
    adexperiencereport<T = adexperiencereport_v1.Adexperiencereport>(options: ServiceOptions | string): T;
    admin<T = admin_datatransfer_v1.Admin | admin_directory_v1.Admin | admin_reports_v1.Admin>(options: ServiceOptions | string): T;
    adsense<T = adsense_v1_4.Adsense>(options: ServiceOptions | string): T;
    adsensehost<T = adsensehost_v4_1.Adsensehost>(options: ServiceOptions | string): T;
    analytics<T = analytics_v2_4.Analytics | analytics_v3.Analytics>(options: ServiceOptions | string): T;
    analyticsreporting<T = analyticsreporting_v4.Analyticsreporting>(options: ServiceOptions | string): T;
    androiddeviceprovisioning<T = androiddeviceprovisioning_v1.Androiddeviceprovisioning>(options: ServiceOptions | string): T;
    androidenterprise<T = androidenterprise_v1.Androidenterprise>(options: ServiceOptions | string): T;
    androidmanagement<T = androidmanagement_v1.Androidmanagement>(options: ServiceOptions | string): T;
    androidpublisher<T = androidpublisher_v1_1.Androidpublisher | androidpublisher_v1.Androidpublisher | androidpublisher_v2.Androidpublisher>(options: ServiceOptions | string): T;
    appengine<T = appengine_v1.Appengine | appengine_v1alpha.Appengine | appengine_v1beta.Appengine | appengine_v1beta4.Appengine | appengine_v1beta5.Appengine>(options: ServiceOptions | string): T;
    appsactivity<T = appsactivity_v1.Appsactivity>(options: ServiceOptions | string): T;
    appstate<T = appstate_v1.Appstate>(options: ServiceOptions | string): T;
    bigquery<T = bigquery_v2.Bigquery>(options: ServiceOptions | string): T;
    bigquerydatatransfer<T = bigquerydatatransfer_v1.Bigquerydatatransfer>(options: ServiceOptions | string): T;
    blogger<T = blogger_v2.Blogger | blogger_v3.Blogger>(options: ServiceOptions | string): T;
    books<T = books_v1.Books>(options: ServiceOptions | string): T;
    calendar<T = calendar_v3.Calendar>(options: ServiceOptions | string): T;
    chat<T = chat_v1.Chat>(options: ServiceOptions | string): T;
    civicinfo<T = civicinfo_v2.Civicinfo>(options: ServiceOptions | string): T;
    classroom<T = classroom_v1.Classroom>(options: ServiceOptions | string): T;
    cloudbilling<T = cloudbilling_v1.Cloudbilling>(options: ServiceOptions | string): T;
    cloudbuild<T = cloudbuild_v1.Cloudbuild>(options: ServiceOptions | string): T;
    clouddebugger<T = clouddebugger_v2.Clouddebugger>(options: ServiceOptions | string): T;
    clouderrorreporting<T = clouderrorreporting_v1beta1.Clouderrorreporting>(options: ServiceOptions | string): T;
    cloudfunctions<T = cloudfunctions_v1.Cloudfunctions | cloudfunctions_v1beta2.Cloudfunctions>(options: ServiceOptions | string): T;
    cloudiot<T = cloudiot_v1.Cloudiot>(options: ServiceOptions | string): T;
    cloudkms<T = cloudkms_v1.Cloudkms>(options: ServiceOptions | string): T;
    cloudresourcemanager<T = cloudresourcemanager_v1.Cloudresourcemanager | cloudresourcemanager_v1beta1.Cloudresourcemanager | cloudresourcemanager_v2.Cloudresourcemanager | cloudresourcemanager_v2beta1.Cloudresourcemanager>(options: ServiceOptions | string): T;
    cloudshell<T = cloudshell_v1.Cloudshell | cloudshell_v1alpha1.Cloudshell>(options: ServiceOptions | string): T;
    cloudtasks<T = cloudtasks_v2beta2.Cloudtasks>(options: ServiceOptions | string): T;
    cloudtrace<T = cloudtrace_v1.Cloudtrace | cloudtrace_v2.Cloudtrace>(options: ServiceOptions | string): T;
    compute<T = compute_alpha.Compute | compute_beta.Compute | compute_v1.Compute>(options: ServiceOptions | string): T;
    container<T = container_v1.Container | container_v1beta1.Container>(options: ServiceOptions | string): T;
    content<T = content_v2.Content | content_v2sandbox.Content>(options: ServiceOptions | string): T;
    customsearch<T = customsearch_v1.Customsearch>(options: ServiceOptions | string): T;
    dataflow<T = dataflow_v1b3.Dataflow>(options: ServiceOptions | string): T;
    dataproc<T = dataproc_v1.Dataproc | dataproc_v1beta2.Dataproc>(options: ServiceOptions | string): T;
    datastore<T = datastore_v1.Datastore | datastore_v1beta1.Datastore | datastore_v1beta3.Datastore>(options: ServiceOptions | string): T;
    deploymentmanager<T = deploymentmanager_alpha.Deploymentmanager | deploymentmanager_v2.Deploymentmanager | deploymentmanager_v2beta.Deploymentmanager>(options: ServiceOptions | string): T;
    dfareporting<T = dfareporting_v2_8.Dfareporting | dfareporting_v3_0.Dfareporting>(options: ServiceOptions | string): T;
    dialogflow<T = dialogflow_v2.Dialogflow | dialogflow_v2beta1.Dialogflow>(options: ServiceOptions | string): T;
    digitalassetlinks<T = digitalassetlinks_v1.Digitalassetlinks>(options: ServiceOptions | string): T;
    discovery<T = discovery_v1.Discovery>(options: ServiceOptions | string): T;
    dlp<T = dlp_v2.Dlp | dlp_v2beta1.Dlp | dlp_v2beta2.Dlp>(options: ServiceOptions | string): T;
    dns<T = dns_v1.Dns | dns_v1beta2.Dns | dns_v2beta1.Dns>(options: ServiceOptions | string): T;
    doubleclickbidmanager<T = doubleclickbidmanager_v1.Doubleclickbidmanager>(options: ServiceOptions | string): T;
    doubleclicksearch<T = doubleclicksearch_v2.Doubleclicksearch>(options: ServiceOptions | string): T;
    drive<T = drive_v2.Drive | drive_v3.Drive>(options: ServiceOptions | string): T;
    firebasedynamiclinks<T = firebasedynamiclinks_v1.Firebasedynamiclinks>(options: ServiceOptions | string): T;
    firebaserules<T = firebaserules_v1.Firebaserules>(options: ServiceOptions | string): T;
    firestore<T = firestore_v1beta1.Firestore>(options: ServiceOptions | string): T;
    fitness<T = fitness_v1.Fitness>(options: ServiceOptions | string): T;
    fusiontables<T = fusiontables_v1.Fusiontables | fusiontables_v2.Fusiontables>(options: ServiceOptions | string): T;
    games<T = games_v1.Games>(options: ServiceOptions | string): T;
    gamesConfiguration<T = gamesConfiguration_v1configuration.Gamesconfiguration>(options: ServiceOptions | string): T;
    gamesManagement<T = gamesManagement_v1management.Gamesmanagement>(options: ServiceOptions | string): T;
    genomics<T = genomics_v1.Genomics | genomics_v1alpha2.Genomics | genomics_v2alpha1.Genomics>(options: ServiceOptions | string): T;
    gmail<T = gmail_v1.Gmail>(options: ServiceOptions | string): T;
    groupsmigration<T = groupsmigration_v1.Groupsmigration>(options: ServiceOptions | string): T;
    groupssettings<T = groupssettings_v1.Groupssettings>(options: ServiceOptions | string): T;
    iam<T = iam_v1.Iam>(options: ServiceOptions | string): T;
    identitytoolkit<T = identitytoolkit_v3.Identitytoolkit>(options: ServiceOptions | string): T;
    kgsearch<T = kgsearch_v1.Kgsearch>(options: ServiceOptions | string): T;
    language<T = language_v1.Language | language_v1beta1.Language | language_v1beta2.Language>(options: ServiceOptions | string): T;
    licensing<T = licensing_v1.Licensing>(options: ServiceOptions | string): T;
    logging<T = logging_v2.Logging | logging_v2beta1.Logging>(options: ServiceOptions | string): T;
    manufacturers<T = manufacturers_v1.Manufacturers>(options: ServiceOptions | string): T;
    mirror<T = mirror_v1.Mirror>(options: ServiceOptions | string): T;
    ml<T = ml_v1.Ml>(options: ServiceOptions | string): T;
    monitoring<T = monitoring_v3.Monitoring>(options: ServiceOptions | string): T;
    oauth2<T = oauth2_v1.Oauth2 | oauth2_v2.Oauth2>(options: ServiceOptions | string): T;
    oslogin<T = oslogin_v1.Oslogin | oslogin_v1alpha.Oslogin | oslogin_v1beta.Oslogin>(options: ServiceOptions | string): T;
    pagespeedonline<T = pagespeedonline_v1.Pagespeedonline | pagespeedonline_v2.Pagespeedonline | pagespeedonline_v4.Pagespeedonline>(options: ServiceOptions | string): T;
    partners<T = partners_v2.Partners>(options: ServiceOptions | string): T;
    people<T = people_v1.People>(options: ServiceOptions | string): T;
    playcustomapp<T = playcustomapp_v1.Playcustomapp>(options: ServiceOptions | string): T;
    plus<T = plus_v1.Plus>(options: ServiceOptions | string): T;
    plusDomains<T = plusDomains_v1.Plusdomains>(options: ServiceOptions | string): T;
    poly<T = poly_v1.Poly>(options: ServiceOptions | string): T;
    prediction<T = prediction_v1_2.Prediction | prediction_v1_3.Prediction | prediction_v1_4.Prediction | prediction_v1_5.Prediction | prediction_v1_6.Prediction>(options: ServiceOptions | string): T;
    proximitybeacon<T = proximitybeacon_v1beta1.Proximitybeacon>(options: ServiceOptions | string): T;
    pubsub<T = pubsub_v1.Pubsub | pubsub_v1beta1a.Pubsub | pubsub_v1beta2.Pubsub>(options: ServiceOptions | string): T;
    replicapool<T = replicapool_v1beta1.Replicapool | replicapool_v1beta2.Replicapool>(options: ServiceOptions | string): T;
    replicapoolupdater<T = replicapoolupdater_v1beta1.Replicapoolupdater>(options: ServiceOptions | string): T;
    reseller<T = reseller_v1.Reseller>(options: ServiceOptions | string): T;
    resourceviews<T = resourceviews_v1beta1.Resourceviews | resourceviews_v1beta2.Resourceviews>(options: ServiceOptions | string): T;
    runtimeconfig<T = runtimeconfig_v1.Runtimeconfig | runtimeconfig_v1beta1.Runtimeconfig>(options: ServiceOptions | string): T;
    safebrowsing<T = safebrowsing_v4.Safebrowsing>(options: ServiceOptions | string): T;
    script<T = script_v1.Script>(options: ServiceOptions | string): T;
    searchconsole<T = searchconsole_v1.Searchconsole>(options: ServiceOptions | string): T;
    serviceconsumermanagement<T = serviceconsumermanagement_v1.Serviceconsumermanagement>(options: ServiceOptions | string): T;
    servicecontrol<T = servicecontrol_v1.Servicecontrol>(options: ServiceOptions | string): T;
    servicemanagement<T = servicemanagement_v1.Servicemanagement>(options: ServiceOptions | string): T;
    serviceusage<T = serviceusage_v1beta1.Serviceusage>(options: ServiceOptions | string): T;
    serviceuser<T = serviceuser_v1.Serviceuser>(options: ServiceOptions | string): T;
    sheets<T = sheets_v4.Sheets>(options: ServiceOptions | string): T;
    siteVerification<T = siteVerification_v1.Siteverification>(options: ServiceOptions | string): T;
    slides<T = slides_v1.Slides>(options: ServiceOptions | string): T;
    sourcerepo<T = sourcerepo_v1.Sourcerepo>(options: ServiceOptions | string): T;
    spanner<T = spanner_v1.Spanner>(options: ServiceOptions | string): T;
    spectrum<T = spectrum_v1explorer.Spectrum>(options: ServiceOptions | string): T;
    speech<T = speech_v1.Speech | speech_v1beta1.Speech>(options: ServiceOptions | string): T;
    sqladmin<T = sqladmin_v1beta3.Sqladmin | sqladmin_v1beta4.Sqladmin>(options: ServiceOptions | string): T;
    storage<T = storage_v1.Storage | storage_v1beta1.Storage | storage_v1beta2.Storage>(options: ServiceOptions | string): T;
    storagetransfer<T = storagetransfer_v1.Storagetransfer>(options: ServiceOptions | string): T;
    streetviewpublish<T = streetviewpublish_v1.Streetviewpublish>(options: ServiceOptions | string): T;
    surveys<T = surveys_v2.Surveys>(options: ServiceOptions | string): T;
    tagmanager<T = tagmanager_v1.Tagmanager | tagmanager_v2.Tagmanager>(options: ServiceOptions | string): T;
    taskqueue<T = taskqueue_v1beta1.Taskqueue | taskqueue_v1beta2.Taskqueue>(options: ServiceOptions | string): T;
    tasks<T = tasks_v1.Tasks>(options: ServiceOptions | string): T;
    testing<T = testing_v1.Testing>(options: ServiceOptions | string): T;
    texttospeech<T = texttospeech_v1beta1.Texttospeech>(options: ServiceOptions | string): T;
    toolresults<T = toolresults_v1beta3.Toolresults>(options: ServiceOptions | string): T;
    tpu<T = tpu_v1alpha1.Tpu>(options: ServiceOptions | string): T;
    translate<T = translate_v2.Translate>(options: ServiceOptions | string): T;
    urlshortener<T = urlshortener_v1.Urlshortener>(options: ServiceOptions | string): T;
    vault<T = vault_v1.Vault>(options: ServiceOptions | string): T;
    videointelligence<T = videointelligence_v1beta1.Videointelligence>(options: ServiceOptions | string): T;
    vision<T = vision_v1.Vision | vision_v1p1beta1.Vision | vision_v1p2beta1.Vision>(options: ServiceOptions | string): T;
    webfonts<T = webfonts_v1.Webfonts>(options: ServiceOptions | string): T;
    webmasters<T = webmasters_v3.Webmasters>(options: ServiceOptions | string): T;
    youtube<T = youtube_v3.Youtube>(options: ServiceOptions | string): T;
    youtubeAnalytics<T = youtubeAnalytics_v1.Youtubeanalytics | youtubeAnalytics_v1beta1.Youtubeanalytics>(options: ServiceOptions | string): T;
    youtubereporting<T = youtubereporting_v1.Youtubereporting>(options: ServiceOptions | string): T;
}
