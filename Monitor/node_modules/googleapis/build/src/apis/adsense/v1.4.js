"use strict";
/**
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var apirequest_1 = require("../../lib/apirequest");
// TODO: We will eventually get the `any` in here cleared out, but in the
// interim we want to turn on no-implicit-any.
// tslint:disable: no-any
// tslint:disable: class-name
// tslint:disable: variable-name
// tslint:disable: jsdoc-format
/**
 * AdSense Management API
 *
 * Accesses AdSense publishers&#39; inventory and generates performance reports.
 *
 * @example
 * const google = require('googleapis');
 * const adsense = google.adsense('v1.4');
 *
 * @namespace adsense
 * @type {Function}
 * @version v1.4
 * @variation v1.4
 * @param {object=} options Options for Adsense
 */
var Adsense = /** @class */ (function () {
    function Adsense(options, google) {
        this.root = this;
        this._options = options || {};
        this.google = google;
        this.getRoot.bind(this);
        this.accounts = new Resource$Accounts(this);
        this.adclients = new Resource$Adclients(this);
        this.adunits = new Resource$Adunits(this);
        this.alerts = new Resource$Alerts(this);
        this.customchannels = new Resource$Customchannels(this);
        this.metadata = new Resource$Metadata(this);
        this.payments = new Resource$Payments(this);
        this.reports = new Resource$Reports(this);
        this.savedadstyles = new Resource$Savedadstyles(this);
        this.urlchannels = new Resource$Urlchannels(this);
    }
    Adsense.prototype.getRoot = function () {
        return this.root;
    };
    return Adsense;
}());
exports.Adsense = Adsense;
var Resource$Accounts = /** @class */ (function () {
    function Resource$Accounts(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.adclients = new Resource$Accounts$Adclients(root);
        this.adunits = new Resource$Accounts$Adunits(root);
        this.alerts = new Resource$Accounts$Alerts(root);
        this.customchannels = new Resource$Accounts$Customchannels(root);
        this.payments = new Resource$Accounts$Payments(root);
        this.reports = new Resource$Accounts$Reports(root);
        this.savedadstyles = new Resource$Accounts$Savedadstyles(root);
        this.urlchannels = new Resource$Accounts$Urlchannels(root);
    }
    Resource$Accounts.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/accounts/{accountId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/accounts')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts;
}());
exports.Resource$Accounts = Resource$Accounts;
var Resource$Accounts$Adclients = /** @class */ (function () {
    function Resource$Accounts$Adclients(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Adclients.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Adclients.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Adclients;
}());
exports.Resource$Accounts$Adclients = Resource$Accounts$Adclients;
var Resource$Accounts$Adunits = /** @class */ (function () {
    function Resource$Accounts$Adunits(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.customchannels = new Resource$Accounts$Adunits$Customchannels(root);
    }
    Resource$Accounts$Adunits.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Adunits.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId', 'adUnitId'],
            pathParams: ['accountId', 'adClientId', 'adUnitId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts$Adunits.prototype.getAdCode = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/adcode')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId', 'adUnitId'],
            pathParams: ['accountId', 'adClientId', 'adUnitId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts$Adunits.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId'],
            pathParams: ['accountId', 'adClientId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Adunits;
}());
exports.Resource$Accounts$Adunits = Resource$Accounts$Adunits;
var Resource$Accounts$Adunits$Customchannels = /** @class */ (function () {
    function Resource$Accounts$Adunits$Customchannels(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Adunits$Customchannels.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Adunits$Customchannels.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/customchannels')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId', 'adUnitId'],
            pathParams: ['accountId', 'adClientId', 'adUnitId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Adunits$Customchannels;
}());
exports.Resource$Accounts$Adunits$Customchannels = Resource$Accounts$Adunits$Customchannels;
var Resource$Accounts$Alerts = /** @class */ (function () {
    function Resource$Accounts$Alerts(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Alerts.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Alerts.prototype.delete = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/alerts/{alertId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'DELETE'
            }, options),
            params: params,
            requiredParams: ['accountId', 'alertId'],
            pathParams: ['accountId', 'alertId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts$Alerts.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Alerts;
}());
exports.Resource$Accounts$Alerts = Resource$Accounts$Alerts;
var Resource$Accounts$Customchannels = /** @class */ (function () {
    function Resource$Accounts$Customchannels(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.adunits = new Resource$Accounts$Customchannels$Adunits(root);
    }
    Resource$Accounts$Customchannels.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Customchannels.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId', 'customChannelId'],
            pathParams: ['accountId', 'adClientId', 'customChannelId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts$Customchannels.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId'],
            pathParams: ['accountId', 'adClientId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Customchannels;
}());
exports.Resource$Accounts$Customchannels = Resource$Accounts$Customchannels;
var Resource$Accounts$Customchannels$Adunits = /** @class */ (function () {
    function Resource$Accounts$Customchannels$Adunits(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Customchannels$Adunits.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Customchannels$Adunits.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}/adunits')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId', 'customChannelId'],
            pathParams: ['accountId', 'adClientId', 'customChannelId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Customchannels$Adunits;
}());
exports.Resource$Accounts$Customchannels$Adunits = Resource$Accounts$Customchannels$Adunits;
var Resource$Accounts$Payments = /** @class */ (function () {
    function Resource$Accounts$Payments(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Payments.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Payments.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/payments')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Payments;
}());
exports.Resource$Accounts$Payments = Resource$Accounts$Payments;
var Resource$Accounts$Reports = /** @class */ (function () {
    function Resource$Accounts$Reports(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.saved = new Resource$Accounts$Reports$Saved(root);
    }
    Resource$Accounts$Reports.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Reports.prototype.generate = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'startDate', 'endDate'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Reports;
}());
exports.Resource$Accounts$Reports = Resource$Accounts$Reports;
var Resource$Accounts$Reports$Saved = /** @class */ (function () {
    function Resource$Accounts$Reports$Saved(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Reports$Saved.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Reports$Saved.prototype.generate = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/reports/{savedReportId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'savedReportId'],
            pathParams: ['accountId', 'savedReportId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts$Reports$Saved.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports/saved')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Reports$Saved;
}());
exports.Resource$Accounts$Reports$Saved = Resource$Accounts$Reports$Saved;
var Resource$Accounts$Savedadstyles = /** @class */ (function () {
    function Resource$Accounts$Savedadstyles(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Savedadstyles.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Savedadstyles.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/savedadstyles/{savedAdStyleId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'savedAdStyleId'],
            pathParams: ['accountId', 'savedAdStyleId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts$Savedadstyles.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/savedadstyles')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Savedadstyles;
}());
exports.Resource$Accounts$Savedadstyles = Resource$Accounts$Savedadstyles;
var Resource$Accounts$Urlchannels = /** @class */ (function () {
    function Resource$Accounts$Urlchannels(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Urlchannels.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Urlchannels.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/urlchannels')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId'],
            pathParams: ['accountId', 'adClientId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Urlchannels;
}());
exports.Resource$Accounts$Urlchannels = Resource$Accounts$Urlchannels;
var Resource$Adclients = /** @class */ (function () {
    function Resource$Adclients(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Adclients.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Adclients.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/adclients')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Adclients;
}());
exports.Resource$Adclients = Resource$Adclients;
var Resource$Adunits = /** @class */ (function () {
    function Resource$Adunits(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.customchannels = new Resource$Adunits$Customchannels(root);
    }
    Resource$Adunits.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Adunits.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['adClientId', 'adUnitId'],
            pathParams: ['adClientId', 'adUnitId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Adunits.prototype.getAdCode = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/adcode')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['adClientId', 'adUnitId'],
            pathParams: ['adClientId', 'adUnitId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Adunits.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['adClientId'],
            pathParams: ['adClientId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Adunits;
}());
exports.Resource$Adunits = Resource$Adunits;
var Resource$Adunits$Customchannels = /** @class */ (function () {
    function Resource$Adunits$Customchannels(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Adunits$Customchannels.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Adunits$Customchannels.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/customchannels')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['adClientId', 'adUnitId'],
            pathParams: ['adClientId', 'adUnitId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Adunits$Customchannels;
}());
exports.Resource$Adunits$Customchannels = Resource$Adunits$Customchannels;
var Resource$Alerts = /** @class */ (function () {
    function Resource$Alerts(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Alerts.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Alerts.prototype.delete = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/alerts/{alertId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'DELETE'
            }, options),
            params: params,
            requiredParams: ['alertId'],
            pathParams: ['alertId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Alerts.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/alerts')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Alerts;
}());
exports.Resource$Alerts = Resource$Alerts;
var Resource$Customchannels = /** @class */ (function () {
    function Resource$Customchannels(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.adunits = new Resource$Customchannels$Adunits(root);
    }
    Resource$Customchannels.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Customchannels.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['adClientId', 'customChannelId'],
            pathParams: ['adClientId', 'customChannelId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Customchannels.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/adclients/{adClientId}/customchannels')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['adClientId'],
            pathParams: ['adClientId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Customchannels;
}());
exports.Resource$Customchannels = Resource$Customchannels;
var Resource$Customchannels$Adunits = /** @class */ (function () {
    function Resource$Customchannels$Adunits(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Customchannels$Adunits.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Customchannels$Adunits.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}/adunits')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['adClientId', 'customChannelId'],
            pathParams: ['adClientId', 'customChannelId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Customchannels$Adunits;
}());
exports.Resource$Customchannels$Adunits = Resource$Customchannels$Adunits;
var Resource$Metadata = /** @class */ (function () {
    function Resource$Metadata(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.dimensions = new Resource$Metadata$Dimensions(root);
        this.metrics = new Resource$Metadata$Metrics(root);
    }
    Resource$Metadata.prototype.getRoot = function () {
        return this.root;
    };
    return Resource$Metadata;
}());
exports.Resource$Metadata = Resource$Metadata;
var Resource$Metadata$Dimensions = /** @class */ (function () {
    function Resource$Metadata$Dimensions(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Metadata$Dimensions.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Metadata$Dimensions.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/metadata/dimensions')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Metadata$Dimensions;
}());
exports.Resource$Metadata$Dimensions = Resource$Metadata$Dimensions;
var Resource$Metadata$Metrics = /** @class */ (function () {
    function Resource$Metadata$Metrics(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Metadata$Metrics.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Metadata$Metrics.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/metadata/metrics')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Metadata$Metrics;
}());
exports.Resource$Metadata$Metrics = Resource$Metadata$Metrics;
var Resource$Payments = /** @class */ (function () {
    function Resource$Payments(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Payments.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Payments.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/payments')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Payments;
}());
exports.Resource$Payments = Resource$Payments;
var Resource$Reports = /** @class */ (function () {
    function Resource$Reports(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.saved = new Resource$Reports$Saved(root);
    }
    Resource$Reports.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Reports.prototype.generate = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/reports')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['startDate', 'endDate'],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Reports;
}());
exports.Resource$Reports = Resource$Reports;
var Resource$Reports$Saved = /** @class */ (function () {
    function Resource$Reports$Saved(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Reports$Saved.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Reports$Saved.prototype.generate = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/reports/{savedReportId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['savedReportId'],
            pathParams: ['savedReportId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Reports$Saved.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/reports/saved')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Reports$Saved;
}());
exports.Resource$Reports$Saved = Resource$Reports$Saved;
var Resource$Savedadstyles = /** @class */ (function () {
    function Resource$Savedadstyles(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Savedadstyles.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Savedadstyles.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/savedadstyles/{savedAdStyleId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['savedAdStyleId'],
            pathParams: ['savedAdStyleId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Savedadstyles.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/savedadstyles')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Savedadstyles;
}());
exports.Resource$Savedadstyles = Resource$Savedadstyles;
var Resource$Urlchannels = /** @class */ (function () {
    function Resource$Urlchannels(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Urlchannels.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Urlchannels.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/urlchannels')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['adClientId'],
            pathParams: ['adClientId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Urlchannels;
}());
exports.Resource$Urlchannels = Resource$Urlchannels;
//# sourceMappingURL=v1.4.js.map