"use strict";
/**
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var apirequest_1 = require("../../lib/apirequest");
// TODO: We will eventually get the `any` in here cleared out, but in the
// interim we want to turn on no-implicit-any.
// tslint:disable: no-any
// tslint:disable: class-name
// tslint:disable: variable-name
// tslint:disable: jsdoc-format
/**
 * Fusion Tables API
 *
 * API for working with Fusion Tables data.
 *
 * @example
 * const google = require('googleapis');
 * const fusiontables = google.fusiontables('v2');
 *
 * @namespace fusiontables
 * @type {Function}
 * @version v2
 * @variation v2
 * @param {object=} options Options for Fusiontables
 */
var Fusiontables = /** @class */ (function () {
    function Fusiontables(options, google) {
        this.root = this;
        this._options = options || {};
        this.google = google;
        this.getRoot.bind(this);
        this.column = new Resource$Column(this);
        this.query = new Resource$Query(this);
        this.style = new Resource$Style(this);
        this.table = new Resource$Table(this);
        this.task = new Resource$Task(this);
        this.template = new Resource$Template(this);
    }
    Fusiontables.prototype.getRoot = function () {
        return this.root;
    };
    return Fusiontables;
}());
exports.Fusiontables = Fusiontables;
var Resource$Column = /** @class */ (function () {
    function Resource$Column(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Column.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Column.prototype.delete = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/fusiontables/v2/tables/{tableId}/columns/{columnId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'DELETE'
            }, options),
            params: params,
            requiredParams: ['tableId', 'columnId'],
            pathParams: ['columnId', 'tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Column.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/fusiontables/v2/tables/{tableId}/columns/{columnId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['tableId', 'columnId'],
            pathParams: ['columnId', 'tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Column.prototype.insert = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/columns')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'POST'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Column.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/columns')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Column.prototype.patch = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/fusiontables/v2/tables/{tableId}/columns/{columnId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'PATCH'
            }, options),
            params: params,
            requiredParams: ['tableId', 'columnId'],
            pathParams: ['columnId', 'tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Column.prototype.update = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/fusiontables/v2/tables/{tableId}/columns/{columnId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'PUT'
            }, options),
            params: params,
            requiredParams: ['tableId', 'columnId'],
            pathParams: ['columnId', 'tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Column;
}());
exports.Resource$Column = Resource$Column;
var Resource$Query = /** @class */ (function () {
    function Resource$Query(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Query.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Query.prototype.sql = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/query')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'POST'
            }, options),
            params: params,
            requiredParams: ['sql'],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Query.prototype.sqlGet = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/query')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['sql'],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Query;
}());
exports.Resource$Query = Resource$Query;
var Resource$Style = /** @class */ (function () {
    function Resource$Style(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Style.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Style.prototype.delete = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/styles/{styleId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'DELETE'
            }, options),
            params: params,
            requiredParams: ['tableId', 'styleId'],
            pathParams: ['styleId', 'tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Style.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/styles/{styleId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['tableId', 'styleId'],
            pathParams: ['styleId', 'tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Style.prototype.insert = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/styles')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'POST'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Style.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/styles')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Style.prototype.patch = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/styles/{styleId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'PATCH'
            }, options),
            params: params,
            requiredParams: ['tableId', 'styleId'],
            pathParams: ['styleId', 'tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Style.prototype.update = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/styles/{styleId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'PUT'
            }, options),
            params: params,
            requiredParams: ['tableId', 'styleId'],
            pathParams: ['styleId', 'tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Style;
}());
exports.Resource$Style = Resource$Style;
var Resource$Table = /** @class */ (function () {
    function Resource$Table(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Table.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Table.prototype.copy = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/copy')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'POST'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Table.prototype.delete = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'DELETE'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Table.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Table.prototype.importRows = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/import')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'POST'
            }, options),
            params: params,
            mediaUrl: (rootUrl + '/upload/fusiontables/v2/tables/{tableId}/import')
                .replace(/([^:]\/)\/+/g, '$1'),
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Table.prototype.importTable = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/import')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'POST'
            }, options),
            params: params,
            mediaUrl: (rootUrl + '/upload/fusiontables/v2/tables/import')
                .replace(/([^:]\/)\/+/g, '$1'),
            requiredParams: ['name'],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Table.prototype.insert = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'POST'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Table.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Table.prototype.patch = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'PATCH'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Table.prototype.refetchSheet = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/refetch')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'POST'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Table.prototype.replaceRows = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/replace')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'POST'
            }, options),
            params: params,
            mediaUrl: (rootUrl + '/upload/fusiontables/v2/tables/{tableId}/replace')
                .replace(/([^:]\/)\/+/g, '$1'),
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Table.prototype.update = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'PUT'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Table;
}());
exports.Resource$Table = Resource$Table;
var Resource$Task = /** @class */ (function () {
    function Resource$Task(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Task.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Task.prototype.delete = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/tasks/{taskId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'DELETE'
            }, options),
            params: params,
            requiredParams: ['tableId', 'taskId'],
            pathParams: ['tableId', 'taskId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Task.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/tasks/{taskId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['tableId', 'taskId'],
            pathParams: ['tableId', 'taskId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Task.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/tasks')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Task;
}());
exports.Resource$Task = Resource$Task;
var Resource$Template = /** @class */ (function () {
    function Resource$Template(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Template.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Template.prototype.delete = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/fusiontables/v2/tables/{tableId}/templates/{templateId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'DELETE'
            }, options),
            params: params,
            requiredParams: ['tableId', 'templateId'],
            pathParams: ['tableId', 'templateId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Template.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/fusiontables/v2/tables/{tableId}/templates/{templateId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['tableId', 'templateId'],
            pathParams: ['tableId', 'templateId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Template.prototype.insert = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/templates')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'POST'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Template.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/fusiontables/v2/tables/{tableId}/templates')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['tableId'],
            pathParams: ['tableId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Template.prototype.patch = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/fusiontables/v2/tables/{tableId}/templates/{templateId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'PATCH'
            }, options),
            params: params,
            requiredParams: ['tableId', 'templateId'],
            pathParams: ['tableId', 'templateId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Template.prototype.update = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/fusiontables/v2/tables/{tableId}/templates/{templateId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'PUT'
            }, options),
            params: params,
            requiredParams: ['tableId', 'templateId'],
            pathParams: ['tableId', 'templateId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Template;
}());
exports.Resource$Template = Resource$Template;
//# sourceMappingURL=v2.js.map