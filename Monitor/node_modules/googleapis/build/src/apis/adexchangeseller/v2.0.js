"use strict";
/**
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var apirequest_1 = require("../../lib/apirequest");
// TODO: We will eventually get the `any` in here cleared out, but in the
// interim we want to turn on no-implicit-any.
// tslint:disable: no-any
// tslint:disable: class-name
// tslint:disable: variable-name
// tslint:disable: jsdoc-format
/**
 * Ad Exchange Seller API
 *
 * Accesses the inventory of Ad Exchange seller users and generates reports.
 *
 * @example
 * const google = require('googleapis');
 * const adexchangeseller = google.adexchangeseller('v2.0');
 *
 * @namespace adexchangeseller
 * @type {Function}
 * @version v2.0
 * @variation v2.0
 * @param {object=} options Options for Adexchangeseller
 */
var Adexchangeseller = /** @class */ (function () {
    function Adexchangeseller(options, google) {
        this.root = this;
        this._options = options || {};
        this.google = google;
        this.getRoot.bind(this);
        this.accounts = new Resource$Accounts(this);
    }
    Adexchangeseller.prototype.getRoot = function () {
        return this.root;
    };
    return Adexchangeseller;
}());
exports.Adexchangeseller = Adexchangeseller;
var Resource$Accounts = /** @class */ (function () {
    function Resource$Accounts(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.adclients = new Resource$Accounts$Adclients(root);
        this.alerts = new Resource$Accounts$Alerts(root);
        this.customchannels = new Resource$Accounts$Customchannels(root);
        this.metadata = new Resource$Accounts$Metadata(root);
        this.preferreddeals = new Resource$Accounts$Preferreddeals(root);
        this.reports = new Resource$Accounts$Reports(root);
        this.urlchannels = new Resource$Accounts$Urlchannels(root);
    }
    Resource$Accounts.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adexchangeseller/v2.0/accounts/{accountId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adexchangeseller/v2.0/accounts')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: [],
            pathParams: [],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts;
}());
exports.Resource$Accounts = Resource$Accounts;
var Resource$Accounts$Adclients = /** @class */ (function () {
    function Resource$Accounts$Adclients(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Adclients.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Adclients.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/adclients')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Adclients;
}());
exports.Resource$Accounts$Adclients = Resource$Accounts$Adclients;
var Resource$Accounts$Alerts = /** @class */ (function () {
    function Resource$Accounts$Alerts(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Alerts.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Alerts.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl + '/adexchangeseller/v2.0/accounts/{accountId}/alerts')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Alerts;
}());
exports.Resource$Accounts$Alerts = Resource$Accounts$Alerts;
var Resource$Accounts$Customchannels = /** @class */ (function () {
    function Resource$Accounts$Customchannels(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Customchannels.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Customchannels.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId', 'customChannelId'],
            pathParams: ['accountId', 'adClientId', 'customChannelId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts$Customchannels.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/adclients/{adClientId}/customchannels')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId'],
            pathParams: ['accountId', 'adClientId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Customchannels;
}());
exports.Resource$Accounts$Customchannels = Resource$Accounts$Customchannels;
var Resource$Accounts$Metadata = /** @class */ (function () {
    function Resource$Accounts$Metadata(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.dimensions = new Resource$Accounts$Metadata$Dimensions(root);
        this.metrics = new Resource$Accounts$Metadata$Metrics(root);
    }
    Resource$Accounts$Metadata.prototype.getRoot = function () {
        return this.root;
    };
    return Resource$Accounts$Metadata;
}());
exports.Resource$Accounts$Metadata = Resource$Accounts$Metadata;
var Resource$Accounts$Metadata$Dimensions = /** @class */ (function () {
    function Resource$Accounts$Metadata$Dimensions(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Metadata$Dimensions.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Metadata$Dimensions.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/metadata/dimensions')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Metadata$Dimensions;
}());
exports.Resource$Accounts$Metadata$Dimensions = Resource$Accounts$Metadata$Dimensions;
var Resource$Accounts$Metadata$Metrics = /** @class */ (function () {
    function Resource$Accounts$Metadata$Metrics(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Metadata$Metrics.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Metadata$Metrics.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/metadata/metrics')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Metadata$Metrics;
}());
exports.Resource$Accounts$Metadata$Metrics = Resource$Accounts$Metadata$Metrics;
var Resource$Accounts$Preferreddeals = /** @class */ (function () {
    function Resource$Accounts$Preferreddeals(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Preferreddeals.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Preferreddeals.prototype.get = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/preferreddeals/{dealId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'dealId'],
            pathParams: ['accountId', 'dealId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts$Preferreddeals.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/preferreddeals')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Preferreddeals;
}());
exports.Resource$Accounts$Preferreddeals = Resource$Accounts$Preferreddeals;
var Resource$Accounts$Reports = /** @class */ (function () {
    function Resource$Accounts$Reports(root) {
        this.root = root;
        this.getRoot.bind(this);
        this.saved = new Resource$Accounts$Reports$Saved(root);
    }
    Resource$Accounts$Reports.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Reports.prototype.generate = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/reports')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'startDate', 'endDate'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Reports;
}());
exports.Resource$Accounts$Reports = Resource$Accounts$Reports;
var Resource$Accounts$Reports$Saved = /** @class */ (function () {
    function Resource$Accounts$Reports$Saved(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Reports$Saved.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Reports$Saved.prototype.generate = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/reports/{savedReportId}')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'savedReportId'],
            pathParams: ['accountId', 'savedReportId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    Resource$Accounts$Reports$Saved.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/reports/saved')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId'],
            pathParams: ['accountId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Reports$Saved;
}());
exports.Resource$Accounts$Reports$Saved = Resource$Accounts$Reports$Saved;
var Resource$Accounts$Urlchannels = /** @class */ (function () {
    function Resource$Accounts$Urlchannels(root) {
        this.root = root;
        this.getRoot.bind(this);
    }
    Resource$Accounts$Urlchannels.prototype.getRoot = function () {
        return this.root;
    };
    Resource$Accounts$Urlchannels.prototype.list = function (params, options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof params === 'function') {
            callback = params;
            params = {};
        }
        options = options || {};
        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';
        var parameters = {
            options: Object.assign({
                url: (rootUrl +
                    '/adexchangeseller/v2.0/accounts/{accountId}/adclients/{adClientId}/urlchannels')
                    .replace(/([^:]\/)\/+/g, '$1'),
                method: 'GET'
            }, options),
            params: params,
            requiredParams: ['accountId', 'adClientId'],
            pathParams: ['accountId', 'adClientId'],
            context: this.getRoot()
        };
        if (callback) {
            apirequest_1.createAPIRequest(parameters, callback);
        }
        else {
            return apirequest_1.createAPIRequest(parameters);
        }
    };
    return Resource$Accounts$Urlchannels;
}());
exports.Resource$Accounts$Urlchannels = Resource$Accounts$Urlchannels;
//# sourceMappingURL=v2.0.js.map